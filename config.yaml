options:
  ingress:
    type: boolean
    default: true
    description: |
      Deploy the default http backend and ingress controller to handle
      ingress requests.
  labels:
    type: string
    default: ""
    description: |
      Labels can be used to organize and to select subsets of nodes in the
      cluster. Declare node labels in key=value format, separated by spaces.
  allow-privileged:
    type: string
    default: "true"
    description: |
      This option is now deprecated and has no effect.
  channel:
    type: string
    default: "1.17/stable"
    description: |
      Snap channel to install Kubernetes worker services from
  require-manual-upgrade:
    type: boolean
    default: true
    description: |
      When true, worker services will not be upgraded until the user triggers
      it manually by running the upgrade action.
  kubelet-extra-args:
    type: string
    default: ""
    description: |
      Space separated list of flags and key=value pairs that will be passed as arguments to
      kubelet. For example a value like this:
        runtime-config=batch/v2alpha1=true profiling=true
      will result in kubelet being run with the following options:
        --runtime-config=batch/v2alpha1=true --profiling=true
      Note: As of Kubernetes 1.10.x, many of Kubelet's args have been deprecated, and can
      be set with kubelet-extra-config instead.
  ingress-default-ssl-certificate:
    type: string
    default: ""
    description: |
      SSL certificate to be used by the default HTTPS server. If one of the
      flag ingress-default-ssl-certificate or ingress-default-ssl-key is not
      provided ingress will use a self-signed certificate. This parameter is
      specific to nginx-ingress-controller.
  ingress-default-ssl-key:
    type: string
    default: ""
    description: |
      Private key to be used by the default HTTPS server. If one of the flag
      ingress-default-ssl-certificate or ingress-default-ssl-key is not
      provided ingress will use a self-signed certificate. This parameter is
      specific to nginx-ingress-controller.
  ingress-ssl-passthrough:
    type: boolean
    default: false
    description: |
      Enable ssl passthrough on ingress server. This allows passing the ssl
      connection through to the workloads and not terminating it at the ingress
      controller.
  ingress-ssl-chain-completion:
    type: boolean
    default: false
    description: |
      Enable chain completion for TLS certificates used by the nginx ingress
      controller.  Set this to true if you would like the ingress controller
      to attempt auto-retrieval of intermediate certificates.  The default
      (false) is recommended for all production kubernetes installations, and
      any environment which does not have outbound Internet access.
  nginx-image:
    type: string
    default: "auto"
    description: |
      Docker image to use for the nginx ingress controller. Auto will select an image
      based on architecture.
  default-backend-image:
    type: string
    default: "auto"
    description: |
      Docker image to use for the default backend. Auto will select an image
      based on architecture.
  snapd_refresh:
    default: "max"
    type: string
    description: |
      How often snapd handles updates for installed snaps. Setting an empty
      string will check 4x per day. Set to "max" to delay the refresh as long
      as possible. You may also set a custom string as described in the
      'refresh.timer' section here:
        https://forum.snapcraft.io/t/system-options/87
  kubelet-extra-config:
    default: "{}"
    type: string
    description: |
      Extra configuration to be passed to kubelet. Any values specified in this
      config will be merged into a KubeletConfiguration file that is passed to
      the kubelet service via the --config flag. This can be used to override
      values provided by the charm.

      Requires Kubernetes 1.10+.

      The value for this config must be a YAML mapping that can be safely
      merged with a KubeletConfiguration file. For example:
        {evictionHard: {memory.available: 200Mi}}

      For more information about KubeletConfiguration, see upstream docs:
      https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/
