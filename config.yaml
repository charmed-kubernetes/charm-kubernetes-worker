options:
  ingress:
    type: boolean
    default: true
    description: |
      Deploy the default http backend and ingress controller to handle
      ingress requests.
      
      Set to false if deploying an alternate ingress controller, and note
      that you may need to manually open ports 80 and 443 on the nodes:
        juju run --application kubernetes-worker -- open-port 80 && open-port 443
  channel:
    type: string
    default: "1.28/stable"
    description: |
      Snap channel to install Kubernetes worker services from
  require-manual-upgrade:
    type: boolean
    default: true
    description: |
      When true, worker services will not be upgraded until the user triggers
      it manually by running the upgrade action.
  ingress-default-ssl-certificate:
    type: string
    default: ""
    description: |
      SSL certificate to be used by the default HTTPS server. If one of the
      flag ingress-default-ssl-certificate or ingress-default-ssl-key is not
      provided ingress will use a self-signed certificate. This parameter is
      specific to nginx-ingress-controller.
  ingress-default-ssl-key:
    type: string
    default: ""
    description: |
      Private key to be used by the default HTTPS server. If one of the flag
      ingress-default-ssl-certificate or ingress-default-ssl-key is not
      provided ingress will use a self-signed certificate. This parameter is
      specific to nginx-ingress-controller.
  ingress-ssl-passthrough:
    type: boolean
    default: false
    description: |
      Enable ssl passthrough on ingress server. This allows passing the ssl
      connection through to the workloads and not terminating it at the ingress
      controller.
  ingress-ssl-chain-completion:
    type: boolean
    default: false
    description: |
      Enable chain completion for TLS certificates used by the nginx ingress
      controller.  Set this to true if you would like the ingress controller
      to attempt auto-retrieval of intermediate certificates.  The default
      (false) is recommended for all production kubernetes installations, and
      any environment which does not have outbound Internet access.
  ingress-use-forwarded-headers:
    type: boolean
    default: false
    description: |
      If true, NGINX passes the incoming X-Forwarded-* headers to upstreams. Use this
      option when NGINX is behind another L7 proxy / load balancer that is setting
      these headers.

      If false, NGINX ignores incoming X-Forwarded-* headers, filling them with the
      request information it sees. Use this option if NGINX is exposed directly to
      the internet, or it's behind a L3/packet-based load balancer that doesn't alter
      the source IP in the packets.

      Reference: https://github.com/kubernetes/ingress-nginx/blob/a9c706be12a8be418c49ab1f60a02f52f9b14e55/
      docs/user-guide/nginx-configuration/configmap.md#use-forwarded-headers.
  nginx-image:
    type: string
    default: "auto"
    description: |
      Docker image to use for the nginx ingress controller. Using "auto" will select
      an image based on architecture.
      
      Example:
        quay.io/kubernetes-ingress-controller/nginx-ingress-controller-amd64:0.32.0
  default-backend-image:
    type: string
    default: "auto"
    description: |
      Docker image to use for the default backend. Auto will select an image
      based on architecture.
  snapd_refresh:
    default: "max"
    type: string
    description: |
      How often snapd handles updates for installed snaps. Setting an empty
      string will check 4x per day. Set to "max" to delay the refresh as long
      as possible. You may also set a custom string as described in the
      'refresh.timer' section here:
        https://forum.snapcraft.io/t/system-options/87
  ignore-missing-cni:
    type: boolean
    default: false
    description: |
      If ignore-missing-cni is set to true, the charm will not enter a blocked state if a CNI has not been configured/provided via relation.
      If ignore-missing-cni is set to false, and a CNI has not been configured/provided via relation, then the charm will enter a blocked state with the message: "Missing CNI relation or config".
